{
  "uid" : "20630a7bd3ea9c20",
  "name" : "test_get_all_agent_info[data0-True-0]",
  "fullName" : "testcases.api_test.test_agent_info.TestGetAgentInfo#test_get_all_agent_info",
  "historyId" : "505f91295bbfb2a107a2ccf3d3869d17",
  "time" : {
    "start" : 1702628252734,
    "stop" : 1702628253147,
    "duration" : 413
  },
  "description" : "该用例是针对获取所有agent信息接口的测试",
  "descriptionHtml" : "<p>该用例是针对获取所有agent信息接口的测试</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 接口返回码是 【 1 】, 返回信息：请求过于频繁，请稍后后再试！ \nassert False == True\n  -False\n  +True",
  "statusTrace" : "self = <testcases.api_test.test_agent_info.TestGetAgentInfo object at 0x0000000003D2ED00>, data = {'current': 1, 'query': {'isAll': True}, 'size': 10}\nexcept_result = True, except_code = 0\n\n    @allure.story(\"用例--获取全部agent信息\")\n    @allure.description(\"该用例是针对获取所有agent信息接口的测试\")\n    # @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    # @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @pytest.mark.test\n    @pytest.mark.parametrize(\"data,except_result,except_code\",\n                             api_data[\"test_get_all_agent_info\"])\n    def test_get_all_agent_info(self, data,except_result,except_code):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        size = data[\"size\"]\n        current = data[\"current\"]\n        query = data[\"query\"]\n        result = get_all_agent(size=size,current=current,query=query)\n        assert result.response.status_code == 200\n>       assert result.success == except_result, result.error\nE       AssertionError: 接口返回码是 【 1 】, 返回信息：请求过于频繁，请稍后后再试！ \nE       assert False == True\nE         -False\nE         +True\n\ntestcases\\api_test\\test_agent_info.py:29: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "该用例是针对获取所有agent信息接口的测试",
    "status" : "failed",
    "statusMessage" : "AssertionError: 接口返回码是 【 1 】, 返回信息：请求过于频繁，请稍后后再试！ \nassert False == True\n  -False\n  +True",
    "statusTrace" : "self = <testcases.api_test.test_agent_info.TestGetAgentInfo object at 0x0000000003D2ED00>, data = {'current': 1, 'query': {'isAll': True}, 'size': 10}\nexcept_result = True, except_code = 0\n\n    @allure.story(\"用例--获取全部agent信息\")\n    @allure.description(\"该用例是针对获取所有agent信息接口的测试\")\n    # @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    # @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @pytest.mark.test\n    @pytest.mark.parametrize(\"data,except_result,except_code\",\n                             api_data[\"test_get_all_agent_info\"])\n    def test_get_all_agent_info(self, data,except_result,except_code):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        size = data[\"size\"]\n        current = data[\"current\"]\n        query = data[\"query\"]\n        result = get_all_agent(size=size,current=current,query=query)\n        assert result.response.status_code == 200\n>       assert result.success == except_result, result.error\nE       AssertionError: 接口返回码是 【 1 】, 返回信息：请求过于频繁，请稍后后再试！ \nE       assert False == True\nE         -False\nE         +True\n\ntestcases\\api_test\\test_agent_info.py:29: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7433ab7f5640bf6c",
      "name" : "log",
      "source" : "7433ab7f5640bf6c.txt",
      "type" : "text/plain",
      "size" : 832
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "用例--获取全部agent信息"
  }, {
    "name" : "epic",
    "value" : "针对单个接口的测试"
  }, {
    "name" : "feature",
    "value" : "获取agent信息模块"
  }, {
    "name" : "tag",
    "value" : "test"
  }, {
    "name" : "parentSuite",
    "value" : "testcases.api_test"
  }, {
    "name" : "suite",
    "value" : "test_agent_info"
  }, {
    "name" : "subSuite",
    "value" : "TestGetAgentInfo"
  }, {
    "name" : "host",
    "value" : "SKY-20151030HPK"
  }, {
    "name" : "thread",
    "value" : "10904-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.api_test.test_agent_info"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'size': 10, 'current': 1, 'query': {'isAll': True}}"
  }, {
    "name" : "except_code",
    "value" : "0"
  }, {
    "name" : "except_result",
    "value" : "True"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "test" ]
  },
  "source" : "20630a7bd3ea9c20.json",
  "parameterValues" : [ "{'size': 10, 'current': 1, 'query': {'isAll': True}}", "0", "True" ]
}